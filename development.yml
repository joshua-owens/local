- hosts: localhost
  become: true
  tasks:
  - name: Setup apt to use repositories over HTTPS
    apt:
      update_cache: yes
      pkg:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
  - name: Install packages
    apt:
      pkg:
        - neovim
        - tmux
        - php
        - php-xml
        - unzip
  - name: Add VS Code GPG apt key
    apt_key: 
      url: https://packages.microsoft.com/keys/microsoft.asc
      state: present
  - name: Installing VS Code
    apt:
      update_cache: yes
      pkg:
        - code
      state: present
  - name: Add Docker GPG apt key
    apt_key: 
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
  - name: Add docker repo
    apt_repository: 
      repo: deb https://download.docker.com/linux/ubuntu bionic stable
      state: present
  - name: Install docker
    apt:
      update_cache: yes
      pkg:
        - docker-ce
        - docker-ce-cli
        - containerd.io
  - name: Download composer installer
    get_url:
      url: https://getcomposer.org/installer
      dest: /tmp/composer-setup.php
  - name: Run composer installer
    command: php /tmp/composer-setup.php
  - name: Make composer globally available
    command: mv composer.phar /usr/local/bin/composer
  - name: Create docker user group
    group:
      name: docker
      state: present
  - name: Add user to docker user group
    user:
      name: jowens
      groups: 
        - docker
      append: yes
  - name: Active user group changes
    shell: newgrp docker
  - name: Download docker-compose
    get_url: 
      url: https://github.com/docker/compose/releases/download/1.29.0/docker-compose-Linux-x86_64
      dest: /usr/local/bin/docker-compose
  - name: Make docker-compose executable
    file:
      path: /usr/local/bin/docker-compose
      mode: +x
  - name: Get latest version of Hyper from github release
    uri:
      url: https://api.github.com/repos/vercel/hyper/releases/latest
      return_content: true
    register: json_response
  - name: Install hyper
    loop: "{{ json_response.json.assets }}"
    when: '"deb" in item.browser_download_url'
    apt:
      deb: "{{ item.browser_download_url }}"
  - name: Create VimPlug dirs
    file:
      path: /home/jowens/.local/share/nvim/site/autoload
      state: directory
  - name: Install VimPlug
    get_url:
      url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      dest: /home/jowens/.local/share/nvim/site/autoload/plug.vim
  - name: Create symlink for neovim config file
    file:
      src: "{{ playbook_dir }}/dotfiles/init.vim"
      dest: "/home/jowens/.config/nvim/init.vim"
      state: link
  - name: Install nvim plugins
    shell: nvim -E -s "+silent! PlugInstall!" +qall!
